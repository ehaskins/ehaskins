{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018-07-17 Webpack, and Typescipt, and Rust/","webpackCompilationHash":"04c9b1c30955a8ce71b4","result":{"data":{"site":{"siteMetadata":{"title":"Eric Haskins","author":"Eric Haskins"}},"markdownRemark":{"id":"bcd3d495-79bf-5750-9d46-dc0472a496ec","html":"<h1>Notes on my configuration</h1>\n<p>Hopefully I’ll put together a self container repo with this configuration, but for now here’s some notes on configuring Rust/Wasm build using wasm-bindgen and getting it to play well with TypeScript.</p>\n<p>With this config, clean webpack builds should succeed without any pre-existing Rust artifacts. Dev-time tooling for typescript will work after the first wasm32 build. Until then the <code class=\"language-text\">.d.ts</code> file for the Rust module won’t exist, and TypeScript will complain it can’t find the module.</p>\n<p>Next step is to make this all hot-reload, but now without HMR incremental Webpack builds and refreshing the browser works fine.</p>\n<h1>The configuraton</h1>\n<ul>\n<li>\n<p>Rust</p>\n<ul>\n<li>Install Rust and wasm32-unknown-unknown toolchain, and wasm-bindgen</li>\n<li><a href=\"https://rustwasm.github.io/wasm-bindgen/basic-usage.html\">https://rustwasm.github.io/wasm-bindgen/basic-usage.html</a></li>\n</ul>\n</li>\n<li>\n<p>Webpack</p>\n<ul>\n<li>Configure alias with friendly name pointing to <code class=\"language-text\">lib.rs</code></li>\n<li>Remove <code class=\"language-text\">TsconfigPathsPlugin</code>. It gets confused.</li>\n<li>Install <code class=\"language-text\">rust-native-wasm-loader</code>, and configure it:</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  test: /\\.rs$/,\n  use: [\n    {\n      loader: &#39;rust-native-wasm-loader&#39;,\n      options: {\n        wasmBindgen: {\n        typescript: true\n        }\n      }\n    }\n  ]\n},</code></pre></div>\n<ul>\n<li>\n<p>Typescript</p>\n<ul>\n<li>Add mapping from friendly name to wasm-bindgen output, <code class=\"language-text\">target/wasm32-unknown-unknown/debug/[filename].js</code>, to <code class=\"language-text\">compilerOptions.paths</code> property in <code class=\"language-text\">tsconfig.json</code></li>\n<li>Set <code class=\"language-text\">compilerOptions.baseUrl</code> to <code class=\"language-text\">./</code>. <code class=\"language-text\">compilerOptions.paths</code> requires it.</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Webpack, and Typescipt, and Rust","date":"July 17, 2018"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2018-07-17 Webpack, and Typescipt, and Rust/"}}}